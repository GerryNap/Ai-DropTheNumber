#show goodCell/3.
goodCell(R,C,V) | badCell(R,C,V):- cell(R,C,0), actualValue(V).

topCell(R,C,V):- cell(R,C,V), cell(R-1,C,0), V != 0.
position(V):- goodCell(_,C,V), topCell(_,C,V).

:- #count{R,C:goodCell(R,C,_)} != 1.
:- goodCell(R,C,_), cell(R,C,V), V != 0.
:- goodCell(R,C,V), cell(R+1,C,0), R < 5.

:~ goodCell(R,C,_), row(M). [M-R@1, R, C, M]

:~ goodCell(R,C,V1), cell(R+1,C,V2), V1 != V2. [V2@2, R,C,V1,V2]
:~ goodCell(R,C,V1), cell(R,C-1,V2), V1 != V2. [V2@2, R,C,V1,V2]
:~ goodCell(R,C,V1), cell(R,C+1,V2), V1 != V2. [V2@2, R,C,V1,V2]

:~ goodCell(R,C1,V), cell(R,C2,V), &abs(C1-C2; K). [K@2, K]
:~ goodCell(_,C1,V), topCell(_,C2,V), &abs(C1-C2; K), not position(V). [K@3, K]
:~ goodCell(R,C,V1), topCell(_,C,V2), &abs(V1-V2; K), R > 1. [K@4, K]
:~ goodCell(_,C,V1), topCell(_,C,V2), &abs(V1-V2; K), V1 > V2. [K@5, K]
:~ goodCell(0,C,V1), R = 1, cell(R,C,V2), V1 != V2. [R@6,R]